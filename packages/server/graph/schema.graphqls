# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @binding(constraint: String!) on INPUT_FIELD_DEFINITION | ARGUMENT_DEFINITION
directive @hasRole(role: [Role]!) on FIELD_DEFINITION

"The `Date` is a date in the format YYYY-MM-DD"
scalar Date

type Query {
  categories: [Category!]!
  service(id: Int!): Service!
  services(userId: Int!): [Service!]!
}

type Mutation {
  callPassword(phone: String! @binding(constraint: "required,e164")): Call!

  userSignUp(
    email: String!, @binding(constraint: "required,email")
    phone: String!, @binding(constraint: "required,e164")
    password: String!, @binding(constraint: "required,gte=6")
  ): User!
  userSignIn(
    email: String!, @binding(constraint: "required,email")
    password: String!, @binding(constraint: "required,gte=6")
  ): User!
  userRefreshToken(refreshToken: String!): Tokens!

  categoryCreate(
    name: String!, @binding(constraint: "required,lte=255")
    parentId: Int
  ): Category! @hasRole(role: [master])

  serviceCreate(
    categoryId: Int!,
    duration: Int!, @binding(constraint: "required,gt=0")
    price: Int! @binding(constraint: "required,gt=0")
  ): Service! @hasRole(role: [master])
  serviceUpdate(
    serviceId: Int!,
    duration: Int!, @binding(constraint: "required,gt=0")
    price: Int! @binding(constraint: "required,gt=0")
  ): Service! @hasRole(role: [master])
  serviceDelete(
    serviceId: Int!
  ): Boolean! @hasRole(role: [master])

  scheduleEventCreate(input: ScheduleEventInput!): ScheduleEvent! @hasRole(role: [master])
}
